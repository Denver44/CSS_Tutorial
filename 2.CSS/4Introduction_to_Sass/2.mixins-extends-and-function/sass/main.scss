// VARIABLES
// Variables always start with $ sign that's how sass will find out that is a variable.
$color-primary: #f9ed69; // Yellow Color
$color-secondary: #f08a5d; // Orange Color
$color-tertiary: #b83b5e; // Pink Color
$color-text-dark: #333; // Pink Color
$color-text-light: #eee; // Pink Color
$width-button: 150px;

* {
  margin: 0;
  padding: 0;
}

// Custom Function
@function divide($a, $b) {
  @return $a/$b;
}

// Mixins
@mixin clearfix {
  &::after {
    content: '';
    clear: both;
    display: table;
  }
}

@mixin style-link-text($col) {
  text-transform: uppercase;
  text-decoration: none;
  color: $col;
}

nav {
  margin: divide(300, 10) + 0px; // Here we have used our own function
  background-color: $color-primary;
  @include clearfix;
}

.navigation {
  list-style: none;
  float: left;
  text-align: center;

  //   Here li is the element in the navigation which don't want & if we add the it will be like naviagtionli
  li {
    display: inline-block;
    margin-left: 30px;

    // This & replace it with up till the path here. which .navigation li
    &:first-child {
      margin: 0;
    }

    a:link,
    a:visited {
      @include style-link-text($color-text-dark);
    }
  }
}

.button {
  float: right;
}

// USE Case of Extends
%btn-placeholder {
  padding: 8px;
  display: inline-block;
  text-align: center;
  border-radius: 100px;
  width: $width-button;
  @include style-link-text($color-text-light);
}

.btn-main {
  &:link,
  &:visited {
    @extend %btn-placeholder;
    background-color: $color-secondary;
  }
  //   This way we can give Function like darken and lighten
  &:hover {
    background-color: darken($color-secondary, 15%);
  }
}

.btn-hot {
  &:link,
  &:visited {
    @extend %btn-placeholder;
    background-color: $color-tertiary;
  }
  &:hover {
    background-color: lighten($color-tertiary, 5%);
    color: darken(#fff, 15%);
  }
}
