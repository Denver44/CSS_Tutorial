/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* Reset using Universal Selector */
* {
  margin: 0;
  border: 0;
  box-sizing: border-box;
}

/* Properties which will be inherited to all element */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px; /* To give a white space between the whole content and window */
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, #7ed56fcc, #31b485cc),
    url("../img/hero.jpg"); /* As we want linear gradient on image we write gradient first then the image with color opacity of 0.8 */
  background-size: cover;
  background-position: top;
  clip-path: polygon(
    0 0,
    100% 0,
    100% 80vh,
    0 100%
  ); /* Enter the co-ordinate nicely or use https://bennettfeely.com/clippy/ */
  position: relative;
}

.logo-box {
  top: 40px;
  left: 40px;
  position: absolute;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute; /* Here we will center the text-box respect to parent. */
  top: 40%;
  left: 50%;
  transform: translate(
    -50%,
    -50%
  ); /* Here we will change the x and y co-ordinates respect to the element. */
  text-align: center; /* As it is treated as text and it inline box element so that we are able use this property */
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden; /* This is used to fix the shaking while the animation is perform*/
  margin-bottom: 60px;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  animation: moveInLeft 1s ease-out;
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  animation: moveInRight 1s ease-in;
}

/* This are the custom keyframes which we can use anywhere */

@keyframes moveInLeft {
  0% {
    transform: translateX(-100px);
    opacity: 0;
  }
  80% {
    transform: translateX(10px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    transform: translateX(100px);
    opacity: 0;
  }
  80% {
    transform: translateX(-10px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    transform: translateY(30px);
    opacity: 0;
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link,
.btn:visited {
  text-decoration: none;
  text-transform: uppercase;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  transition: all 0.2s;
  position: relative;
}

.btn-white {
  background-color: #fff;
  color: #777;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%; /* This means height of button as it is child of button */
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn-white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.5) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
  /*
  This above property what it does it apply 0% property before animation starts 
    0% {
    transform: translateY(30px);
    opacity: 0;
  }
  */
}
